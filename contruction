



gg.clearResults()
gg.clearList()
gg.setSpeed(2)
gg.setVisible(false)
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("1701996056;1651327333;99;27491", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.refineNumber("99", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)

function wait_for_action()
    gg.setVisible(false)
    while true do
        gg.sleep(100)
        if gg.isVisible() then
            break
        end
    end
  end

local results = gg.getResults(50)

for i, result in ipairs(results) do
    result.address = tonumber(string.format("%x", tonumber(result.address, 16)) - 0x1C)
    result.flags = gg.TYPE_DWORD
end

gg.loadResults(results)
local editedResults = gg.getResults(gg.getResultsCount())

gg.editAll("0", gg.TYPE_DWORD)

local updatedResults = gg.getResults(gg.getResultsCount())

for i, p in ipairs(updatedResults) do
    updatedResults[i].address = updatedResults[i].address + 0x4
    updatedResults[i].flags = gg.TYPE_DWORD
end

gg.loadResults(updatedResults)
updatedResults = gg.getResults(gg.getResultsCount())

gg.editAll("0", gg.TYPE_DWORD)

for i, p in ipairs(updatedResults) do
    updatedResults[i].address = updatedResults[i].address + 0x4
    updatedResults[i].flags = gg.TYPE_DWORD
end

gg.loadResults(updatedResults)
updatedResults = gg.getResults(gg.getResultsCount())
gg.editAll("0", gg.TYPE_DWORD)



for i, p in ipairs(updatedResults) do
    updatedResults[i].address = updatedResults[i].address - 0x8
    updatedResults[i].flags = gg.TYPE_DWORD
end

gg.loadResults(updatedResults)
updatedResults = gg.getResults(gg.getResultsCount())
gg.toast("Silahkan di klaim rewardnya kemudian click lagi icon GG.")


wait_for_action()
gg.processResume()
gg.setVisible(false)

gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
local results = gg.getResults(50)

for i, v in ipairs(results) do 
    v.flags = gg.TYPE_DWORD 
    v.value = 0 
    v.freeze = true 
    v.freezeType = gg.FREEZE_NORMAL 
end 

gg.addListItems(results)





gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)
gg.searchNumber("1701996056;1651327333;99;5;30", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.refineNumber("5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
local results = gg.getResults(50)

for i, p in ipairs(results) do
    results[i].address = results[i].address - 0x24
    results[i].flags = gg.TYPE_DWORD
end
gg.loadResults(results)
gg.getResults(gg.getResultsCount())

local updatedResults = gg.getResults(50)
local variables2 = {"1635148044", "3225651", "0", "0", "0", "0","0","2"}

for _, var in ipairs(variables2) do
    for i, p in ipairs(updatedResults) do
        updatedResults[i].address = updatedResults[i].address + 0x4
        updatedResults[i].flags = gg.TYPE_DWORD
    end
    gg.loadResults(updatedResults)
    gg.getResults(gg.getResultsCount())
    gg.editAll(var, gg.TYPE_DWORD)

    gg.addListItems(updatedResults)
end



for i, p in ipairs(updatedResults) do
    updatedResults[i].address = updatedResults[i].address - 0x1c
    updatedResults[i].flags = gg.TYPE_DWORD
end
gg.loadResults(updatedResults)
gg.getResults(gg.getResultsCount())
gg.toast("AVATAR OK BISA DIGUNAKAN")



local filePath = "/storage/emulated/0/Pictures/avatar.txt"


local function appendValuesToFile(copiedValues)
    local file = io.open(filePath, "a") -- Membuka file untuk menambahkan data
    if file then
        local copiedValuesStr = table.concat(copiedValues, ";")
        file:write(copiedValuesStr .. "\n") -- Menambahkan baris baru setelah setiap pencarian
        file:close()
        gg.toast("Data disimpan ke avatar.txt.")
    else
        gg.toast("Gagal menyimpan data ke file.")
    end
end


local function clearFile()
    local file = io.open(filePath, "w") -- Membuka file dalam mode write untuk menghapus isi
    if file then
        file:close()
        gg.toast("File avatar.txt telah dibersihkan.")
    else
        gg.toast("Gagal membersihkan file avatar.txt.")
    end
end

clearFile()


local dataSudahada = {


}

-- Fungsi untuk menyimpan data ke file
local function simpanKeFile(filePath, data)
    local file = io.open(filePath, "w") -- "w" untuk menulis, gunakan "a" untuk menambahkan
    if file then
        for _, line in ipairs(data) do
            file:write(line .. "\n")
        end
        file:close()
        print("Data berhasil disimpan ke " .. filePath)
    else
        print("Gagal membuka file!")
    end
end

-- Menyimpan data sebelum pencarian dilakukan
simpanKeFile(filePath, dataSudahada)

-- Lanjutkan proses pencarian data di sini...

-- Fungsi untuk melakukan pencarian dan menyimpan hasilnya
local function searchAndSave(searchString)
    gg.clearResults()
    gg.setVisible(false)
    gg.setRanges(gg.REGION_C_ALLOC)
    gg.searchNumber("1701146707;1114658148;1684826485;1936158313", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)

    local results = gg.getResults(9999)

    for i, result in ipairs(results) do
        result.address = tonumber(string.format("%x", tonumber(result.address, 16)) - 0x8)
        result.flags = gg.TYPE_DWORD
    end


    gg.loadResults(results)
    gg.refineNumber("1113542739", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)

    if #results == 0 then
        gg.toast("Tidak ada hasil yang ditemukan setelah refine.")
    end

    gg.toast("Refine selesai, ditemukan " .. #results .. " hasil.")

    
    -- Iterasi hasil dan cari pointer pertama yang valid
for i, result in ipairs(results) do
    local targetAddress = result.address


    -- Mencari QWORD yang menunjuk langsung ke alamat hasil
    gg.clearResults()
    gg.searchNumber(targetAddress, gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)

    -- Ambil nilai ke-4 dari targetAddress untuk refine
    local addressString = tostring(targetAddress)
    local parts = {}

    for match in addressString:gmatch("[^;]+") do
        table.insert(parts, match)
    end

    -- Jika ada setidaknya 4 nilai dalam targetAddress
    if #parts >= 4 then
        local fourthValue = tonumber(parts[4]) -- Ambil nilai ke-4

        if fourthValue then
            -- Refine berdasarkan nilai ke-4
            gg.refineNumber(fourthValue, gg.TYPE_DWORD)

            -- Ambil hasil setelah refine
            local refinedResults = gg.getResults(9999)

            -- Lompat ke offset -0xC dari hasil refine
            for j, refined in ipairs(refinedResults) do
                refined.address = refined.address - 0xC
            end

            -- Simpan hasil refine yang sudah di-offset -0xC
            gg.loadResults(refinedResults)
        end
    end

    -- Lanjutkan proses seperti sebelumnya
    local pointerResults = gg.getResults(9999)

    -- Jika menemukan pointer yang valid, iterasi melalui semua hasil pointer
    for j, pointer in ipairs(pointerResults) do
        local pointerAddress = pointer.address
        
        -- Menuju offset -0x10 dari pointer
        local newAddress = pointerAddress - 0x10

        -- Cek nilai di alamat hasil offset -0x10
        local checkValue = gg.getValues({{address = newAddress, flags = gg.TYPE_DWORD}})
        
        if checkValue and #checkValue > 0 then
            local value = checkValue[1].value

            -- Jika nilai adalah 33 atau 49, lanjutkan proses penyimpanan
            if value == 33 or value == 49 then
                -- Menyimpan alamat hasil offset -0x10 ke daftar hasil
                local offsetResult = {}
                offsetResult[1] = { address = newAddress, flags = gg.TYPE_DWORD }

                -- Load hasil akhir (offset -0x10)
                gg.loadResults(offsetResult)
                gg.toast("Proses selesai, hasil akhir ditemukan dan dimuat.")

                -- *** Menyalin nilai DWORD dari alamat hasil dengan offset +4 ***
                local function copyValues(address)
                    local values = {}
                    for _ = 1, 6 do
                        local newValue = gg.getValues({{address = address, flags = gg.TYPE_DWORD}})
                        if newValue and #newValue > 0 then
                            table.insert(values, newValue[1].value)
                        else
                            print("Gagal mendapatkan nilai DWORD dari alamat: " .. address)
                            return nil
                        end
                        address = address + 0x4 -- Offset +4 untuk mendapatkan 6 nilai
                    end
                    return values
                end

                -- Menyimpan nilai ke file .txt seperti di script sebelumnya
                local copiedValues = copyValues(newAddress)
                if copiedValues then
                    appendValuesToFile(copiedValues)  -- Menyimpan data ke file dalam format yang sama
                else
                    print("Gagal menyalin nilai untuk hasil ke-" .. newAddress)
                end

                return -- Hentikan pencarian setelah menemukan nilai yang benar
            end
        end
    end
end






    local results = gg.getResults(99999)

    -- Fungsi untuk menyalin nilai DWORD dari alamat dengan offset +4
    local function copyValues(address)
        local values = {} -- Reset nilai setiap kali fungsi dipanggil
        for _ = 1, 6 do
            local newValue = gg.getValues({{address = address, flags = gg.TYPE_DWORD}})
            if newValue and #newValue > 0 then
                table.insert(values, newValue[1].value)
            else
                print("Gagal mendapatkan nilai DWORD dari alamat: " .. address)
                return nil
            end
            address = address + 0x4 -- Menambah alamat dengan offset +4
        end
        return values
    end

    -- Menyimpan nilai ke file txt segera setelah proses pencarian selesai
    local copiedValues = {}
    for _, result in ipairs(results) do
        local initialAddress = result.address
        local values = copyValues(initialAddress)
        if values then
            -- Simpan nilai ke file .txt langsung setelah ditemukan
            appendValuesToFile(values)  -- Menambahkan data ke file
            copiedValues = values
        else
            print("Gagal menyalin nilai untuk hasil ke-" .. result.address)
        end
    end

    gg.toast("Semua hasil telah diproses dan data telah disimpan.")
end

-- Daftar pencarian yang akan dilakukan
local searchStrings = {
"1113542739;1953722223;1919906899;1130719073;1667330145;7959657"



}

-- Menjalankan pencarian dan menyimpan data untuk setiap string pencarian
for _, searchString in ipairs(searchStrings) do
    searchAndSave(searchString)
end







gg.setVisible(false)

local function loadDataFromFile()
    local data = {}
    local file = io.open("/storage/emulated/0/Pictures/avatar.txt", "r") -- Ganti dengan path file yang sesuai
    if file then
        for line in file:lines() do
            table.insert(data, line) -- Menambahkan setiap baris ke dalam data
        end
        file:close()
    else
        gg.toast("Gagal membuka file untuk dibaca.")
    end
    return data
end

local filterValues = {
    "33;0;23;0;739469408;32767",
    "33;0;23;0;739469344;32767",
    "33;0;23;0;739469376;32767",
    "33;0;23;0;739468832;32767"
    -- Tambahkan lebih banyak nilai jika diperlukan
}

-- Fungsi untuk memeriksa apakah nilai ada dalam daftar filter
local function isFiltered(copiedValues)
    local copiedValuesStr = table.concat(copiedValues, ";")
    for _, filterValue in ipairs(filterValues) do
        if copiedValuesStr == filterValue then
            return true -- Nilai ada dalam daftar filter
        end
    end
    return false -- Nilai tidak ada dalam daftar filter
end

-- Fungsi untuk memproses dan menambahkan data ke dalam listItems
local function processDataAndAddToList(values)
    -- Memeriksa apakah nilai ada dalam daftar filter
    if isFiltered(values) then
        print("Nilai ini tidak diproses: " .. table.concat(values, ";"))
    else
        -- Update listItems
        local listItems = gg.getListItems()
        for j = 1, math.min(6, #values) do
            listItems[j].value = values[j]
            listItems[j].freeze = true
            listItems[j].freezeType = gg.FREEZE_NORMAL
        end

        -- Input nilai ke-8 menggunakan prompt
        local input = gg.prompt({"Masukkan nilai untuk Contruction"}, {[1] = "100000"}, {[1] = "number"})
        if input == nil then
            gg.toast("Dibatalkan oleh pengguna")
            return
        end
        gg.toast("Silahkan claim")

        -- Mengatur value ke-7 dan ke-8
        listItems[7].value = 0
        listItems[7].freeze = true
        listItems[7].freezeType = gg.FREEZE_NORMAL

        listItems[8].value = tonumber(input[1]) -- dari prompt
        listItems[8].freeze = true
        listItems[8].freezeType = gg.FREEZE_NORMAL

        gg.addListItems(listItems)
        gg.sleep(2000) -- Menunggu beberapa detik
    end
end


-- Variabel untuk melacak data yang sedang diproses
local currentIndex = 1
local data = loadDataFromFile() -- Memuat data dari file

-- Fungsi untuk memproses data selanjutnya
local function runNext()
    if currentIndex <= #data then
        local line = data[currentIndex] -- Ambil baris data yang sesuai
        local values = {} -- Menyimpan nilai-nilai dari satu baris
        gg.toast("Memproses baris " .. currentIndex .. " dari " .. #data)


        for value in string.gmatch(line, "([^;]+)") do
            table.insert(values, tonumber(value)) -- Menambahkan nilai yang dipisahkan ; ke dalam array
        end
        processDataAndAddToList(values) -- Proses dan tambahkan data ke dalam listItems
        currentIndex = currentIndex + 1 -- Maju ke data selanjutnya
    else
        gg.toast("Semua data telah diproses.")
        os.exit() -- Keluar dari skrip setelah semua data diproses
    end
end


-- Fungsi utama yang memanggil runNext()
local function main()
    if #data > 0 then
        gg.toast("Pencarian Selesai , CLAIM Contruction Speed")
    else
        gg.toast("Tidak ada data yang ditemukan dalam file.")
    end
end

-- Menjalankan fungsi utama
main()
runNext()
os.exit()







